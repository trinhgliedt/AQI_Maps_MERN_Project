{"version":3,"sources":["components/maps.jsx","components/EachStation.js","components/SearchBox.jsx","components/FilteredTable.js","App.js","serviceWorker.js","index.js"],"names":["Map","options","onMount","props","ref","useRef","onLoad","map","window","google","maps","current","useEffect","script","document","createElement","type","src","process","headScript","getElementsByTagName","parentNode","insertBefore","addEventListener","removeEventListener","style","height","margin","borderRadius","EachStation","locLat","locLng","useState","locationData","setLocationData","didRetrieve","setDidRetrieve","isLoaded","setIsLoaded","hoveredOver","setHoveredOver","iaqiKeys","axios","get","then","res","data","status","copiedData","key","iaqi","hasOwnProperty","v","catch","err","console","error","infoStyle","position","top","right","tdStyle","padding","border","marginBottom","width","city","name","onMouseOver","e","onMouseLeave","fontSize","aqi","co","onMouseOut","no2","o3","pm10","pm25","so2","time","s","SearchBox","setLoc","aqiStations","setFilteredStations","address","setAddress","dropOption","setDropOption","Geocode","setApiKey","onSubmit","event","preventDefault","fromAddress","results","geometry","location","navigate","lat","lng","handleSubmit","className","value","onChange","target","filteredStations","filter","station","slice","length","FilteredTable","tableStyle","overflow","scope","sort","a","b","parseInt","i","aqiStyle","uid","onClick","lon","App","links","mapProps","successCallBack","coords","latitude","longitude","setCenteredPos","centeredPos","AQIStations","setAQIStations","navigator","geolocation","getCurrentPosition","log","response","center","zoom","infoWindow","markerList","iconColor","forEach","link","index","LatLng","marker","Marker","title","id","icon","url","push","hValue","Math","floor","addAQIStyle","InfoWindow","addListener","setContent","open","close","MarkerClusterer","imagePath","longLat","primary","path","visibility","from","to","noThrow","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.d6a208d5.chunk.js","sourcesContent":["\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\n\r\nexport const Map = ({ options, onMount}) => {\r\n  const props = { ref: useRef()};\r\n  \r\n  const onLoad = () => {\r\n    const map = new window.google.maps.Map(props.ref.current, options);\r\n    onMount && onMount(map);\r\n  };\r\n  \r\n  \r\n  useEffect(() => {\r\n    if (!window.google) {\r\n      const script = document.createElement(`script`);\r\n      script.type = `text/javascript`;\r\n      script.src = `https://maps.googleapis.com/maps/api/js?key=${process.env.REACT_APP_API_KEY}`;\r\n      const headScript = document.getElementsByTagName(`script`)[0];\r\n      headScript.parentNode.insertBefore(script, headScript);\r\n      script.addEventListener(`load`, onLoad);\r\n      return () => script.removeEventListener(`load`, onLoad);\r\n    } else onLoad();\r\n\r\n  });\r\n\r\n\r\n  return (\r\n    <div\r\n      {...props}\r\n      style={{ height: `80vh`, margin: `1em 0`, borderRadius: `0.5em` }}\r\n    />\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst EachStation = (props) => {\r\n  const { locLat, locLng } = props;\r\n\r\n  const [locationData, setLocationData] = useState(null);\r\n  const [didRetrieve, setDidRetrieve] = useState(true);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n  const [hoveredOver, setHoveredOver] = useState(\"\");\r\n\r\n  const iaqiKeys = [\"co\", \"no2\", \"o3\", \"pm10\", \"pm25\", \"so2\"];\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `https://api.waqi.info/feed/geo:${locLat};${locLng}/?token=d2583b4394214a830ffdade2d10b103620d66ee7`\r\n      )\r\n      .then((res) => {\r\n        if (res.data.status === \"ok\") {\r\n          const copiedData = { ...res.data.data };\r\n          for (let key of iaqiKeys) {\r\n            if (!copiedData.iaqi.hasOwnProperty(key)) {\r\n              copiedData.iaqi[key] = { v: \"N/A\" };\r\n            }\r\n          }\r\n          setLocationData(copiedData);\r\n        } else setDidRetrieve(false);\r\n        setIsLoaded(true);\r\n      })\r\n      .catch((err) => console.error(err));\r\n  }, [locLat, locLng]);\r\n\r\n  const infoStyle = {\r\n    position: \"absolute\",\r\n    top: \"-20px\",\r\n    right: \"120px\",\r\n  };\r\n\r\n  const tdStyle = {\r\n    position: \"relative\",\r\n    padding: \"5px\",\r\n    border: \"1px black solid\",\r\n  };\r\n\r\n  if (!isLoaded || locationData === null) {\r\n    return <div>Fetching station information...</div>;\r\n  }\r\n  if (!didRetrieve) {\r\n    return <div>No information in this area...</div>;\r\n  }\r\n  return (\r\n    <div>\r\n      <table style={{ margin: \"0 auto\", marginBottom: \"50px\" }}>\r\n        <tbody>\r\n          <tr>\r\n            <td\r\n              style={{\r\n                padding: \"2px\",\r\n                border: \"1px black solid\",\r\n                width: \"100px\",\r\n              }}\r\n            >\r\n              Station\r\n            </td>\r\n            <td style={tdStyle}>\r\n              <b>{locationData.city.name}</b>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td style={tdStyle}>\r\n              AQI\r\n              <span\r\n                onMouseOver={(e) => setHoveredOver(\"aqi\")}\r\n                onMouseLeave={(e) => setHoveredOver(\"\")}\r\n              >\r\n                <span style={{ fontSize: \"10px\" }}>&#10068;</span>\r\n                {hoveredOver === \"aqi\" && (\r\n                  <div style={infoStyle}>Real-time air quality information</div>\r\n                )}\r\n              </span>\r\n            </td>\r\n            <td style={tdStyle}>{locationData.aqi}</td>\r\n          </tr>\r\n          <tr>\r\n            <td style={tdStyle}>\r\n              CO\r\n              <span\r\n                onMouseOver={(e) => setHoveredOver(\"co\")}\r\n                onMouseLeave={(e) => setHoveredOver(\"\")}\r\n              >\r\n                <span style={{ fontSize: \"10px\" }}>&#10068;</span>\r\n                {hoveredOver === \"co\" && (\r\n                  <div style={infoStyle}>Carbon Monoxide level</div>\r\n                )}\r\n              </span>\r\n            </td>\r\n            <td style={tdStyle}>{locationData.iaqi.co.v}</td>\r\n          </tr>\r\n          <tr>\r\n            <td style={tdStyle}>\r\n              NO<sub>2</sub>\r\n              <span\r\n                onMouseOver={(e) => setHoveredOver(\"no2\")}\r\n                onMouseOut={(e) => setHoveredOver(\"\")}\r\n              >\r\n                <span style={{ fontSize: \"10px\" }}>&#10068;</span>\r\n                {hoveredOver === \"no2\" && (\r\n                  <div style={infoStyle}>Nitrogen Dioxide level</div>\r\n                )}\r\n              </span>\r\n            </td>\r\n            <td style={tdStyle}>{locationData.iaqi.no2.v}</td>\r\n          </tr>\r\n          <tr>\r\n            <td style={tdStyle}>\r\n              O<sub>3</sub>\r\n              <span\r\n                onMouseOver={(e) => setHoveredOver(\"o3\")}\r\n                onMouseOut={(e) => setHoveredOver(\"\")}\r\n              >\r\n                <span style={{ fontSize: \"10px\" }}>&#10068;</span>\r\n                {hoveredOver === \"o3\" && (\r\n                  <div style={infoStyle}>Ground-level ozone</div>\r\n                )}\r\n              </span>\r\n            </td>\r\n            <td style={tdStyle}>{locationData.iaqi.o3.v}</td>\r\n          </tr>\r\n          <tr>\r\n            <td style={tdStyle}>\r\n              PM<sub>10</sub>\r\n              <span\r\n                onMouseOver={(e) => setHoveredOver(\"pm10\")}\r\n                onMouseOut={(e) => setHoveredOver(\"\")}\r\n              >\r\n                <span style={{ fontSize: \"10px\" }}>&#10068;</span>\r\n                {hoveredOver === \"pm10\" && (\r\n                  <div style={infoStyle}>\r\n                    Particulate matter smaller than 10 micrometer\r\n                  </div>\r\n                )}\r\n              </span>\r\n            </td>\r\n            <td style={tdStyle}>{locationData.iaqi.pm10.v}</td>\r\n          </tr>\r\n          <tr>\r\n            <td style={tdStyle}>\r\n              PM<sub>2.5</sub>\r\n              <span\r\n                onMouseOver={(e) => setHoveredOver(\"pm25\")}\r\n                onMouseOut={(e) => setHoveredOver(\"\")}\r\n              >\r\n                <span style={{ fontSize: \"10px\" }}>&#10068;</span>\r\n                {hoveredOver === \"pm25\" && (\r\n                  <div style={infoStyle}>\r\n                    Particulate matter smaller than 2.5 micrometer\r\n                  </div>\r\n                )}\r\n              </span>\r\n            </td>\r\n            <td style={tdStyle}>{locationData.iaqi.pm25.v}</td>\r\n          </tr>\r\n          <tr>\r\n            <td style={tdStyle}>\r\n              SO<sub>2</sub>\r\n              <span\r\n                onMouseOver={(e) => setHoveredOver(\"so2\")}\r\n                onMouseOut={(e) => setHoveredOver(\"\")}\r\n              >\r\n                <span style={{ fontSize: \"10px\" }}>&#10068;</span>\r\n                {hoveredOver === \"so2\" && (\r\n                  <div style={infoStyle}>Sulfur Dioxide level</div>\r\n                )}\r\n              </span>\r\n            </td>\r\n            <td style={tdStyle}>{locationData.iaqi.so2.v}</td>\r\n          </tr>\r\n          <tr>\r\n            <td style={tdStyle}>Last Updated On</td>\r\n            <td style={tdStyle}>{locationData.time.s}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EachStation;","import { navigate } from \"@reach/router\";\r\nimport React, { useState } from \"react\";\r\nimport Geocode from \"react-geocode\";\r\n\r\nconst SearchBox = ({ setLoc, aqiStations, setFilteredStations }) => {\r\n  const [address, setAddress] = useState(\"\");\r\n  const [dropOption, setDropOption] = useState(\"0\");\r\n  Geocode.setApiKey(process.env.REACT_APP_API_KEY);\r\n\r\n  function handleSubmit (event) {\r\n    event.preventDefault();\r\n    Geocode.fromAddress(address).then(\r\n        res => {\r\n            setLoc(res.results[0].geometry.location);\r\n            setFilteredStations(aqiStations);\r\n            navigate(`/stations/${res.results[0].geometry.location.lat}/${res.results[0].geometry.location.lng}`);\r\n        },\r\n        err => {\r\n          console.error(err);\r\n        }\r\n      );\r\n    setAddress(\"\");\r\n  };\r\n\r\n  function handleFilter (event) {\r\n    event.preventDefault();\r\n    const copiedStations = [...aqiStations];\r\n\r\n    const usStations= copiedStations.filter((station) => {\r\n      return(station.station.name.slice(station.station.name.length-6) !== \"Mexico\"\r\n      && station.station.name.slice(station.station.name.length-6) !== \"Canada\"\r\n      && station.station.name.slice(station.station.name.length-8) !== \"Saguenay\" && station.aqi != \"-\");\r\n    })\r\n\r\n    const filteredStations = usStations.filter((station) => {\r\n      if (dropOption == \"0\") {\r\n        return true;\r\n      }\r\n      else if (dropOption == \"1\") {\r\n        return(station.aqi > 0 && station.aqi <= 50);\r\n      }\r\n      else if (dropOption == \"2\") {\r\n        return(station.aqi > 50 && station.aqi <= 100);\r\n      }\r\n      else if (dropOption == \"3\") {\r\n        return(station.aqi > 100 && station.aqi <= 150);\r\n      }\r\n      else if (dropOption == \"4\") {\r\n        return(station.aqi > 150 && station.aqi <= 200);\r\n      }\r\n      else if (dropOption == \"5\") {\r\n        return(station.aqi > 200 && station.aqi <= 300);\r\n      }\r\n      else if (dropOption == \"6\") {\r\n        return(station.aqi > 300);\r\n      }\r\n    });\r\n\r\n    setFilteredStations(filteredStations);\r\n    navigate(\"/stations/filter\");\r\n  };\r\n \r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={(event) => {\r\n          handleSubmit(event);\r\n        }}>\r\n          <label className=\"my-2\">Address:</label>\r\n          <input type=\"text\" \r\n              className = \"mx-2 my-2\"\r\n              value = {address}\r\n              onChange={(event) => {\r\n              setAddress(event.target.value);\r\n          }}/>\r\n          <button className=\"btn btn-sm btn-info shadow mb-2\" >Show</button>\r\n      </form>\r\n\r\n      <form onSubmit={handleFilter}>\r\n          <label>Filter by AQI:</label>\r\n          <select className=\"mx-2\" onChange={e => setDropOption(e.target.value)}>\r\n            <option value=\"0\">Show All</option>\r\n            <option value=\"1\">0~50</option>\r\n            <option value=\"2\">51~100</option>\r\n            <option value=\"3\">101~150</option>\r\n            <option value=\"4\">151~200</option>\r\n            <option value=\"5\">201~300</option>\r\n            <option value=\"6\">301+</option>\r\n          </select>\r\n          <input className=\"btn btn-sm btn-info shadow mb-2\"  type=\"submit\" value=\"Filter\" />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;","import React from \"react\";\r\nimport { navigate } from \"@reach/router\";\r\n\r\nconst FilteredTable = ({ setLoc, filteredStations }) => {\r\n  const tableStyle = {\r\n    border: \"1px solid black\",\r\n    padding: \"5px\",\r\n  };\r\n\r\n  const handleClick = (lat, lng) => {\r\n    setLoc({ lat, lng });\r\n    navigate(`/stations/${lat}/${lng}`);\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: \"500px\", overflow: \"auto\" }}>\r\n      <table \r\n      className=\"table table-fixed col-9 border table-scroll table-wrap\" style={{ margin: \"0 auto\" }}>\r\n        <thead style={{position: \"sticky\"}}>\r\n          <tr  >\r\n            <th scope=\"col\" style={tableStyle}>Station ID</th>\r\n            <th scope=\"col\" style={tableStyle}>Station</th>\r\n            <th scope=\"col\" style={tableStyle}>AQI</th>\r\n            <th scope=\"col\" style={tableStyle}>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody style={{ height: \"500px\", overflow: \"auto\" }}>\r\n          {filteredStations\r\n            .filter((station) => {\r\n              return(station.station.name.slice(station.station.name.length-6)!== \"Mexico\"\r\n              && station.station.name.slice(station.station.name.length-6) !== \"Canada\"\r\n              && station.station.name.slice(station.station.name.length-8) !== \"Saguenay\"\r\n              && station.aqi !== \"-\")\r\n            })\r\n            .sort((a, b) => (parseInt(a.aqi) > parseInt(b.aqi) ? 1 : -1))\r\n            .map((station, i) => {\r\n                let aqiStyle = \"\";\r\n                if (station.aqi > 150) aqiStyle=\"bg-danger\"\r\n                else if (station.aqi > 50) aqiStyle=\"bg-warning\"\r\n                else aqiStyle=\"bg-success\";\r\n                return (\r\n                  <tr \r\n                  key={i}>\r\n                    <td style={tableStyle}>{station.uid}</td>\r\n                    <td className=\"text-left\" style={tableStyle}>{station.station.name}</td>\r\n                    <td style={tableStyle} className={aqiStyle}>{station.aqi}</td>\r\n                    <td style={tableStyle}>\r\n                      <button\r\n                      className=\"btn btn-sm btn-info shadow mb-2\"\r\n                        onClick={(e) => handleClick(station.lat, station.lon)}\r\n                      >\r\n                        Go to station\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n            // }\r\n            })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FilteredTable;\r\n","import React, { useState, useEffect } from 'react';\r\n// import ReactDOM from \"react-dom\";\r\nimport './App.css';\r\nimport axios from 'axios';\r\nimport { navigate, Router, Redirect } from '@reach/router';\r\n\r\nimport {Map} from './components/maps';\r\nimport EachStation from './components/EachStation';\r\nimport MarkerClusterer from '@googlemaps/markerclustererplus';\r\nimport SearchBox from \"./components/SearchBox\"\r\nimport FilteredTable from './components/FilteredTable';\r\n\r\nimport SearchLocationInput from \"./components/AutoCompleteSearch\";\r\n\r\nfunction App({ mapProps }) {\r\n\r\n  // successCallBack function in finding user location\r\n  const successCallBack= position => {\r\n    const { latitude, longitude } = position.coords;\r\n    setCenteredPos({lat: latitude, lng: longitude});\r\n    return {lat: latitude, lng: longitude};\r\n\r\n  }\r\n  // codes to user location\r\n  function getUserLocation(){\r\n    window.navigator.geolocation\r\n    .getCurrentPosition(successCallBack, console.log);\r\n  }\r\n  const [centeredPos, setCenteredPos] = useState({lat: 40.730610, lng: -73.935242});\r\n  const [AQIStations, setAQIStations] = useState([]);\r\n  const [filteredStations, setFilteredStations] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getUserLocation();\r\n    axios.get(\"https://api.waqi.info/map/bounds/?token=d2583b4394214a830ffdade2d10b103620d66ee7&latlng=24.846565,-65.960261,48.987427,-124.732715\")\r\n    .then(response => {\r\n      setAQIStations(response.data.data);\r\n      setFilteredStations(response.data.data);\r\n    })\r\n    .catch((error) => console.log(error));\r\n  },[])\r\n\r\n  const addAQIStyle = (aqi) => {\r\n    const hValue = 120 - Math.floor(aqi * 0.8);\r\n    const sValue = \"100%\";\r\n    const lValue = \"50%\";\r\n\r\n    return `hsl(${hValue},${sValue},${lValue})`\r\n  }\r\n\r\n  const addMarkers = links => map => {\r\n    const markerList = [];\r\n    var iconColor=\"\";\r\n    var infoWindow;\r\n\r\n    links.forEach((link, index) => {\r\n      \r\n      if (link.station.name.slice(link.station.name.length-6) !== \"Mexico\" && link.station.name.slice(link.station.name.length-6) !== \"Canada\"&& link.station.name.slice(link.station.name.length-8) !== \"Saguenay\" && link.aqi !== \"-\") {\r\n        if (link.aqi > 200){iconColor =\"purple\";}\r\n        else if (link.aqi > 150){iconColor =\"red\";}\r\n        else if (link.aqi > 100){iconColor =\"orange\";}\r\n        else if (link.aqi > 50){iconColor =\"yellow\";}\r\n        else if (link.aqi <= 50){iconColor =\"green\";}\r\n        var position = new window.google.maps.LatLng(link.lat, link.lon);\r\n        const marker = new window.google.maps.Marker({\r\n          map,\r\n          position: position,\r\n          title: link.station.name,\r\n          id: index + 1,\r\n          icon: {\r\n            url: \"http://maps.google.com/mapfiles/ms/icons/\"+iconColor+\"-dot.png\"\r\n          }\r\n        });\r\n\r\n        markerList.push(marker);\r\n\r\n        let infoStyle = `background-color:${addAQIStyle(link.aqi)}`;\r\n        if (parseInt(link.aqi) > 200) {\r\n          infoStyle = `background-color:purple`;\r\n        }\r\n        if (parseInt(link.aqi) > 100) {\r\n          infoStyle += `;color:white`;\r\n        }\r\n\r\n        infoWindow = new window.google.maps.InfoWindow({});\r\n        marker.addListener(`click`, () => {\r\n          infoWindow.setContent(\r\n            `<div style=\"${infoStyle}\">\r\n              <h4 style=\"${infoStyle}\">${link.station.name}</h4>\r\n              <p>Air Quality Index: <b>${link.aqi}</b></p>\r\n              <p>Last Updated: ${link.station.time}</p>\r\n            </div>`\r\n          );\r\n          infoWindow.open(map, marker);\r\n          navigate(`/stations/${link.lat}/${link.lon}`);\r\n        });\r\n        map.addListener('click', function() {\r\n          if (infoWindow) infoWindow.close();\r\n      });\r\n        \r\n      }\r\n    });\r\n\r\n    new MarkerClusterer(map, markerList,\r\n      {imagePath: 'https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m'});\r\n  };\r\n\r\n  mapProps = {\r\n    options: { center: centeredPos, zoom: 12 },\r\n    onMount: addMarkers(filteredStations)\r\n  };\r\n\r\n  return (\r\n    <div className='App'>\r\n      <SearchBox setLoc={longLat => setCenteredPos(longLat)} aqiStations={AQIStations} setFilteredStations={setFilteredStations}/>\r\n      {/* <SearchLocationInput setLoc={longLat => setCenteredPos(longLat)} /> */}\r\n      <Map {...mapProps}/>\r\n      <Router primary={false}>\r\n        <FilteredTable path=\"/stations/filter\" setLoc={longLat => setCenteredPos(longLat)} filteredStations={filteredStations}/>\r\n        <EachStation style={{visibility: \"visible\"}} path=\"/stations/:locLat/:locLng\" />\r\n      </Router>\r\n      <Redirect from=\"/\" to=\"/stations/filter\" noThrow=\"true\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\n\r\nexport { Map as default } from \"./components/maps\";\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}